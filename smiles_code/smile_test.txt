import codecs
from SmilesPE.tokenizer import *
from SmilesPE.pretokenizer import atomwise_tokenizer
from hdlib.space import Vector
from hdlib.space import Space
from hdlib.arithmetic import bind, bundle
from collections import Counter
from random import randint
import numpy as np

def encode_smiles_batch(smiles_list):
    molecule_vectors = {}

    for smi in smiles_list:
        vec_space = Space()
        tokens = atomwise_tokenizer(smi)

        make_unique = [f"{token} {i}" for i, token in enumerate(tokens)]
        vec_space.bulk_insert(make_unique)

        first_vec = vec_space.get(names=[make_unique[0]])[0]
        second_vec = vec_space.get(names=[make_unique[1]])[0]
        culmination = bind(first_vec, second_vec)

        for i in range(2, len(make_unique)):
            current_vec = vec_space.get(names=[make_unique[i]])[0]
            culmination = bind(culmination, current_vec)

        molecule_vectors[smi] = culmination
    
    culmination_vecs_list = list(molecule_vectors.values())

    final_culmination = bundle(culmination_vecs_list[0], culmination_vecs_list[1])

    for i in range(2, len(culmination_vecs_list)):
        current_vec = culmination_vecs_list[i]
        final_culmination = bundle(final_culmination, current_vec)


    return final_culmination



# List of random TOXIC molecules generated by ChatGPT
toxic_smiles = [
    "c1ccccc1",              # Benzene
    "c1ccccc1N",             # Aniline
    "c1ccc(cc1)[N+](=O)[O-]",# Nitrobenzene
    "C=O",                   # Formaldehyde
    "C(Cl)(Cl)(Cl)Cl",       # Carbon tetrachloride
    "C=CC#N",                # Acrylonitrile
    "C=Cl",                  # Vinyl chloride
    "Cc1ccccc1",             # Toluene
    "COS(=O)(=O)OC",         # Dimethyl sulfate
    "C(Cl)(Cl)Cl"            # Chloroform
]


s = dict()

s = encode_smiles_batch(toxic_smiles)
s2 = encode_smiles_batch(toxic_smiles).normalize


print(s)
print(s2)